WITH SUBSET AS (

--Blacklist : L30D - Cust code with >=2 orders canceled 65/685 "customer reason" and loss rate > 30%
--Whitelist: L60 days - Cust with >=2 prepaid orders in 621 AND loss rate <30%

SELECT
	FO.SK_CUSTOMER
	,DC.FLG_DISABLE_POST_PAYMENT_OPTIONS
	,SUM(CASE WHEN FO.SK_DT_ORDER_CREATION >= CONVERT(VARCHAR(8), Dateadd(month, -1, Getdate()), 112) THEN FO.MTR_INITIAL_GROSS_ORDERS ELSE 0 END) AS MTR_INITIAL_GROSS_ORDERS_L30D
	,SUM(CASE WHEN FO.SK_DT_ORDER_CREATION >= CONVERT(VARCHAR(8), Dateadd(month, -1, Getdate()), 112) 
		AND DOS.COD_BE_ORDER_STATUS IN ('65', '685') 
		AND DOR.DSC_RESPONSIBILITY = 'CUSTOMER' 
	THEN FO.MTR_INITIAL_GROSS_ORDERS ELSE 0 END) AS MTR_CANCELED_ORDERS_CUSTOMER_L30D
	,SUM(CASE WHEN FO.SK_DT_ORDER_CREATION >= CONVERT(VARCHAR(8), Dateadd(month, -2, Getdate()), 112) THEN FO.MTR_INITIAL_GROSS_ORDERS ELSE 0 END) AS MTR_INITIAL_GROSS_ORDERS_L60D
	,SUM(CASE WHEN FO.SK_DT_ORDER_CREATION >= CONVERT(VARCHAR(8), Dateadd(month, -2, Getdate()), 112) 
		AND DOS.COD_BE_ORDER_STATUS IN ('621') 
		AND PT.DSC_PAYMENT_TYPE <> 'COD'	
	THEN FO.MTR_INITIAL_GROSS_ORDERS ELSE 0 END) AS MTR_PREPAID_ORDERS_DELIVERED_L60D
FROM
	DW.FCT_ORDERS AS FO
	INNER JOIN _AUX.COUNTRIES AS AC ON AC.COD_COUNTRY = FO.COD_COUNTRY
	INNER JOIN DW.D_ORDER_STATUS DOS ON DOS.SK_ORDER_STATUS = FO.SK_ORDER_STATUS
	INNER JOIN DW.D_ORDER_REASON DOR ON DOR.SK_ORDER_REASON = FO.SK_ORDER_DECLINED_REASON
	INNER JOIN DW.D_CUSTOMER AS DC ON DC.SK_CUSTOMER = FO.SK_CUSTOMER
	INNER JOIN DW.D_PAYMENT_TYPE PT ON PT.SK_PAYMENT_TYPE = FO.SK_PAYMENT_TYPE
WHERE 1=1
GROUP BY FO.SK_CUSTOMER
	,DC.FLG_DISABLE_POST_PAYMENT_OPTIONS
HAVING SUM(CASE WHEN FO.SK_DT_ORDER_CREATION >= CONVERT(VARCHAR(8), Dateadd(month, -2, Getdate()), 112) THEN FO.MTR_INITIAL_GROSS_ORDERS ELSE 0 END) > 0

)

, CUSTOMERS AS (

SELECT SK_CUSTOMER
	,CASE WHEN FLG_DISABLE_POST_PAYMENT_OPTIONS = 0
				AND MTR_CANCELED_ORDERS_CUSTOMER_L30D >= 2
				AND CASE WHEN MTR_INITIAL_GROSS_ORDERS_L30D = 0 THEN NULL ELSE (MTR_CANCELED_ORDERS_CUSTOMER_L30D / MTR_INITIAL_GROSS_ORDERS_L30D) END > 0.3
		THEN 1 ELSE 0 END FLG_TO_BLACKLIST
	,CASE WHEN FLG_DISABLE_POST_PAYMENT_OPTIONS = 1
				AND MTR_CANCELED_ORDERS_CUSTOMER_L30D >= 2
				AND CASE WHEN MTR_INITIAL_GROSS_ORDERS_L60D = 0 THEN NULL ELSE (MTR_PREPAID_ORDERS_DELIVERED_L60D / MTR_INITIAL_GROSS_ORDERS_L60D) END < 0.3
		THEN 1 ELSE 0 END FLG_TO_WHITELIST
FROM SUBSET
WHERE 1=1 
-- CUSTOMERS TO BE BLACKLISTED
AND ((
FLG_DISABLE_POST_PAYMENT_OPTIONS = 0
AND MTR_CANCELED_ORDERS_CUSTOMER_L30D >= 2
AND CASE WHEN MTR_INITIAL_GROSS_ORDERS_L30D = 0 THEN NULL ELSE (MTR_CANCELED_ORDERS_CUSTOMER_L30D / MTR_INITIAL_GROSS_ORDERS_L30D) END > 0.3
)
-- CUSTOMERS TO BE WHITELISTED
OR (
FLG_DISABLE_POST_PAYMENT_OPTIONS = 1
AND MTR_CANCELED_ORDERS_CUSTOMER_L30D >= 2
AND CASE WHEN MTR_INITIAL_GROSS_ORDERS_L60D = 0 THEN NULL ELSE (MTR_PREPAID_ORDERS_DELIVERED_L60D / MTR_INITIAL_GROSS_ORDERS_L60D) END < 0.3
)
)
)

SELECT
	AC.DSC_COUNTRY_SMALL AS [COUNTRY]
	,DC.COD_CUSTOMER
	,DC.COD_CUSTOMER_HASH
	,FO.COD_ORDER_HASH
	,FO.SK_DT_ORDER_CREATION
	,PT.DSC_PAYMENT_TYPE AS [PAYMENT TYPE]
	,DOR.DSC_ORDER_REASON AS [ORDER REASON]
	,DOR.DSC_RESPONSIBILITY [ORDER REASON - RESPONSABILITY]
	,DV.TITLE_VENDOR AS [VENDOR NAME]
	,DP.DSC_DELIVERY_PROVIDER AS [DELIVERY PROVIDER]
	,DL.DSC_CITY AS [DELIVERY CITY]
	,DOS.COD_BE_ORDER_STATUS AS [ORDER STATUS]
	,CASE WHEN DC.FLG_DISABLE_POST_PAYMENT_OPTIONS = 1 THEN 1 ELSE 0 END AS FLG_DISABLE_POST_PAYMENT_OPTIONS
	--,[DATE OF LAST CHANGE] -- unavailable
	,MTR_INITIAL_GROSS_ORDERS
	,MTR_GROSS_ORDERS
	,FLG_DELIVERED_ORDER
	,FO.MTR_GMV
	,FO.MTR_NMV_REALIZED_EXCL_VAT
	,FLG_TO_BLACKLIST
	,FLG_TO_WHITELIST
FROM
	DW.FCT_ORDERS AS FO
	INNER JOIN CUSTOMERS C ON C.SK_CUSTOMER = FO.SK_CUSTOMER
	INNER JOIN _AUX.COUNTRIES AS AC ON AC.COD_COUNTRY = FO.COD_COUNTRY
	INNER JOIN DW.D_ORDER_STATUS DOS ON DOS.SK_ORDER_STATUS = FO.SK_ORDER_STATUS
	INNER JOIN DW.D_ORDER_REASON DOR ON DOR.SK_ORDER_REASON = FO.SK_ORDER_DECLINED_REASON
	INNER JOIN DW.D_CUSTOMER AS DC ON DC.SK_CUSTOMER = FO.SK_CUSTOMER
	INNER JOIN DW.D_PAYMENT_TYPE PT ON PT.SK_PAYMENT_TYPE = FO.SK_PAYMENT_TYPE
	INNER JOIN DW.D_VENDOR AS DV ON DV.SK_VENDOR = FO.SK_VENDOR
	INNER JOIN DW.D_DELIVERY_PROVIDER AS DP ON DP.SK_DELIVERY_PROVIDER = FO.SK_DELIVERY_PROVIDER
	INNER JOIN DW.D_LOCATION DL ON DL.SK_LOCATION = FO.SK_LOCATION_CUSTOMER
WHERE 1=1
	AND FO.SK_DT_ORDER_CREATION >= CONVERT(VARCHAR(8), Dateadd(month, -2, Getdate()), 112)
